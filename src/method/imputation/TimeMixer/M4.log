nohup: ignoring input
Args in experiment:
Namespace(task_name='short_term_forecast', is_training=1, model_id='m4_Monthly', model='TimeMixer', data='m4', root_path='./dataset/m4', data_path='ETTh1.csv', features='M', target='OT', freq='h', checkpoints='./checkpoints/', seq_len=96, label_len=48, pred_len=96, seasonal_patterns='Monthly', inverse=False, top_k=5, num_kernels=6, enc_in=1, dec_in=1, c_out=1, d_model=32, n_heads=8, e_layers=4, d_layers=1, d_ff=32, moving_avg=25, factor=3, distil=True, dropout=0.1, embed='timeF', activation='gelu', output_attention=False, channel_independence=1, decomp_method='moving_avg', use_norm=1, down_sampling_layers=1, down_sampling_window=2, down_sampling_method='avg', use_future_temporal_feature=0, mask_rate=0.125, anomaly_ratio=0.25, num_workers=10, itr=1, train_epochs=50, batch_size=128, patience=20, learning_rate=0.01, des='Exp', loss='SMAPE', drop_last=True, lradj='TST', pct_start=0.2, use_amp=False, comment='none', use_gpu=True, gpu=0, use_multi_gpu=False, devices='0,1', p_hidden_dims=[128, 128], p_hidden_layers=2)
Use GPU: cuda:0
>>>>>>>start training : short_term_forecast_m4_Monthly_none_TimeMixer_m4_sl96_pl96_dm32_nh8_el4_dl1_df32_fc3_ebtimeF_dtTrue_Exp_0>>>>>>>>>>>>>>>>>>>>>>>>>>
Traceback (most recent call last):
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/run.py", line 159, in <module>
    exp.train(setting)
    ~~~~~~~~~^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 56, in train
    train_data, train_loader = self._get_data(flag='train')
                               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 38, in _get_data
    data_set, data_loader = data_provider(self.args, flag)
                            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_factory.py", line 77, in data_provider
    data_set = Data(
        root_path=args.root_path,
    ...<7 lines>...
        seasonal_patterns=args.seasonal_patterns
    )
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 318, in __init__
    self.__read_data__()
    ~~~~~~~~~~~~~~~~~~^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 326, in __read_data__
    training_values = np.array(
        [v[~np.isnan(v)] for v in
         dataset.values[dataset.groups == self.seasonal_patterns]])  # split different frequencies
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (48000,) + inhomogeneous part.
Args in experiment:
Namespace(task_name='short_term_forecast', is_training=1, model_id='m4_Yearly', model='TimeMixer', data='m4', root_path='./dataset/m4', data_path='ETTh1.csv', features='M', target='OT', freq='h', checkpoints='./checkpoints/', seq_len=96, label_len=48, pred_len=96, seasonal_patterns='Yearly', inverse=False, top_k=5, num_kernels=6, enc_in=1, dec_in=1, c_out=1, d_model=32, n_heads=8, e_layers=4, d_layers=1, d_ff=32, moving_avg=25, factor=3, distil=True, dropout=0.1, embed='timeF', activation='gelu', output_attention=False, channel_independence=1, decomp_method='moving_avg', use_norm=1, down_sampling_layers=1, down_sampling_window=2, down_sampling_method='avg', use_future_temporal_feature=0, mask_rate=0.125, anomaly_ratio=0.25, num_workers=10, itr=1, train_epochs=50, batch_size=128, patience=20, learning_rate=0.01, des='Exp', loss='SMAPE', drop_last=True, lradj='TST', pct_start=0.2, use_amp=False, comment='none', use_gpu=True, gpu=0, use_multi_gpu=False, devices='0,1', p_hidden_dims=[128, 128], p_hidden_layers=2)
Use GPU: cuda:0
>>>>>>>start training : short_term_forecast_m4_Yearly_none_TimeMixer_m4_sl96_pl96_dm32_nh8_el4_dl1_df32_fc3_ebtimeF_dtTrue_Exp_0>>>>>>>>>>>>>>>>>>>>>>>>>>
Traceback (most recent call last):
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/run.py", line 159, in <module>
    exp.train(setting)
    ~~~~~~~~~^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 56, in train
    train_data, train_loader = self._get_data(flag='train')
                               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 38, in _get_data
    data_set, data_loader = data_provider(self.args, flag)
                            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_factory.py", line 77, in data_provider
    data_set = Data(
        root_path=args.root_path,
    ...<7 lines>...
        seasonal_patterns=args.seasonal_patterns
    )
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 318, in __init__
    self.__read_data__()
    ~~~~~~~~~~~~~~~~~~^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 326, in __read_data__
    training_values = np.array(
        [v[~np.isnan(v)] for v in
         dataset.values[dataset.groups == self.seasonal_patterns]])  # split different frequencies
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (23000,) + inhomogeneous part.
Args in experiment:
Namespace(task_name='short_term_forecast', is_training=1, model_id='m4_Quarterly', model='TimeMixer', data='m4', root_path='./dataset/m4', data_path='ETTh1.csv', features='M', target='OT', freq='h', checkpoints='./checkpoints/', seq_len=96, label_len=48, pred_len=96, seasonal_patterns='Quarterly', inverse=False, top_k=5, num_kernels=6, enc_in=1, dec_in=1, c_out=1, d_model=32, n_heads=8, e_layers=4, d_layers=1, d_ff=64, moving_avg=25, factor=3, distil=True, dropout=0.1, embed='timeF', activation='gelu', output_attention=False, channel_independence=1, decomp_method='moving_avg', use_norm=1, down_sampling_layers=1, down_sampling_window=2, down_sampling_method='avg', use_future_temporal_feature=0, mask_rate=0.125, anomaly_ratio=0.25, num_workers=10, itr=1, train_epochs=50, batch_size=128, patience=20, learning_rate=0.01, des='Exp', loss='SMAPE', drop_last=True, lradj='TST', pct_start=0.2, use_amp=False, comment='none', use_gpu=True, gpu=0, use_multi_gpu=False, devices='0,1', p_hidden_dims=[128, 128], p_hidden_layers=2)
Use GPU: cuda:0
>>>>>>>start training : short_term_forecast_m4_Quarterly_none_TimeMixer_m4_sl96_pl96_dm32_nh8_el4_dl1_df64_fc3_ebtimeF_dtTrue_Exp_0>>>>>>>>>>>>>>>>>>>>>>>>>>
Traceback (most recent call last):
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/run.py", line 159, in <module>
    exp.train(setting)
    ~~~~~~~~~^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 56, in train
    train_data, train_loader = self._get_data(flag='train')
                               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 38, in _get_data
    data_set, data_loader = data_provider(self.args, flag)
                            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_factory.py", line 77, in data_provider
    data_set = Data(
        root_path=args.root_path,
    ...<7 lines>...
        seasonal_patterns=args.seasonal_patterns
    )
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 318, in __init__
    self.__read_data__()
    ~~~~~~~~~~~~~~~~~~^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 326, in __read_data__
    training_values = np.array(
        [v[~np.isnan(v)] for v in
         dataset.values[dataset.groups == self.seasonal_patterns]])  # split different frequencies
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (24000,) + inhomogeneous part.
Args in experiment:
Namespace(task_name='short_term_forecast', is_training=1, model_id='m4_Daily', model='TimeMixer', data='m4', root_path='./dataset/m4', data_path='ETTh1.csv', features='M', target='OT', freq='h', checkpoints='./checkpoints/', seq_len=96, label_len=48, pred_len=96, seasonal_patterns='Daily', inverse=False, top_k=5, num_kernels=6, enc_in=1, dec_in=1, c_out=1, d_model=32, n_heads=8, e_layers=4, d_layers=1, d_ff=16, moving_avg=25, factor=3, distil=True, dropout=0.1, embed='timeF', activation='gelu', output_attention=False, channel_independence=1, decomp_method='moving_avg', use_norm=1, down_sampling_layers=1, down_sampling_window=2, down_sampling_method='avg', use_future_temporal_feature=0, mask_rate=0.125, anomaly_ratio=0.25, num_workers=10, itr=1, train_epochs=50, batch_size=128, patience=20, learning_rate=0.01, des='Exp', loss='SMAPE', drop_last=True, lradj='TST', pct_start=0.2, use_amp=False, comment='none', use_gpu=True, gpu=0, use_multi_gpu=False, devices='0,1', p_hidden_dims=[128, 128], p_hidden_layers=2)
Use GPU: cuda:0
>>>>>>>start training : short_term_forecast_m4_Daily_none_TimeMixer_m4_sl96_pl96_dm32_nh8_el4_dl1_df16_fc3_ebtimeF_dtTrue_Exp_0>>>>>>>>>>>>>>>>>>>>>>>>>>
Traceback (most recent call last):
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/run.py", line 159, in <module>
    exp.train(setting)
    ~~~~~~~~~^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 56, in train
    train_data, train_loader = self._get_data(flag='train')
                               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 38, in _get_data
    data_set, data_loader = data_provider(self.args, flag)
                            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_factory.py", line 77, in data_provider
    data_set = Data(
        root_path=args.root_path,
    ...<7 lines>...
        seasonal_patterns=args.seasonal_patterns
    )
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 318, in __init__
    self.__read_data__()
    ~~~~~~~~~~~~~~~~~~^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 326, in __read_data__
    training_values = np.array(
        [v[~np.isnan(v)] for v in
         dataset.values[dataset.groups == self.seasonal_patterns]])  # split different frequencies
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (4227,) + inhomogeneous part.
Args in experiment:
Namespace(task_name='short_term_forecast', is_training=1, model_id='m4_Weekly', model='TimeMixer', data='m4', root_path='./dataset/m4', data_path='ETTh1.csv', features='M', target='OT', freq='h', checkpoints='./checkpoints/', seq_len=96, label_len=48, pred_len=96, seasonal_patterns='Weekly', inverse=False, top_k=5, num_kernels=6, enc_in=1, dec_in=1, c_out=1, d_model=32, n_heads=8, e_layers=4, d_layers=1, d_ff=32, moving_avg=25, factor=3, distil=True, dropout=0.1, embed='timeF', activation='gelu', output_attention=False, channel_independence=1, decomp_method='moving_avg', use_norm=1, down_sampling_layers=1, down_sampling_window=2, down_sampling_method='avg', use_future_temporal_feature=0, mask_rate=0.125, anomaly_ratio=0.25, num_workers=10, itr=1, train_epochs=50, batch_size=128, patience=20, learning_rate=0.01, des='Exp', loss='SMAPE', drop_last=True, lradj='TST', pct_start=0.2, use_amp=False, comment='none', use_gpu=True, gpu=0, use_multi_gpu=False, devices='0,1', p_hidden_dims=[128, 128], p_hidden_layers=2)
Use GPU: cuda:0
>>>>>>>start training : short_term_forecast_m4_Weekly_none_TimeMixer_m4_sl96_pl96_dm32_nh8_el4_dl1_df32_fc3_ebtimeF_dtTrue_Exp_0>>>>>>>>>>>>>>>>>>>>>>>>>>
Traceback (most recent call last):
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/run.py", line 159, in <module>
    exp.train(setting)
    ~~~~~~~~~^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 56, in train
    train_data, train_loader = self._get_data(flag='train')
                               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 38, in _get_data
    data_set, data_loader = data_provider(self.args, flag)
                            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_factory.py", line 77, in data_provider
    data_set = Data(
        root_path=args.root_path,
    ...<7 lines>...
        seasonal_patterns=args.seasonal_patterns
    )
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 318, in __init__
    self.__read_data__()
    ~~~~~~~~~~~~~~~~~~^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 326, in __read_data__
    training_values = np.array(
        [v[~np.isnan(v)] for v in
         dataset.values[dataset.groups == self.seasonal_patterns]])  # split different frequencies
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (359,) + inhomogeneous part.
Args in experiment:
Namespace(task_name='short_term_forecast', is_training=1, model_id='m4_Hourly', model='TimeMixer', data='m4', root_path='./dataset/m4', data_path='ETTh1.csv', features='M', target='OT', freq='h', checkpoints='./checkpoints/', seq_len=96, label_len=48, pred_len=96, seasonal_patterns='Hourly', inverse=False, top_k=5, num_kernels=6, enc_in=1, dec_in=1, c_out=1, d_model=32, n_heads=8, e_layers=4, d_layers=1, d_ff=32, moving_avg=25, factor=3, distil=True, dropout=0.1, embed='timeF', activation='gelu', output_attention=False, channel_independence=1, decomp_method='moving_avg', use_norm=1, down_sampling_layers=1, down_sampling_window=2, down_sampling_method='avg', use_future_temporal_feature=0, mask_rate=0.125, anomaly_ratio=0.25, num_workers=10, itr=1, train_epochs=50, batch_size=128, patience=20, learning_rate=0.01, des='Exp', loss='SMAPE', drop_last=True, lradj='TST', pct_start=0.2, use_amp=False, comment='none', use_gpu=True, gpu=0, use_multi_gpu=False, devices='0,1', p_hidden_dims=[128, 128], p_hidden_layers=2)
Use GPU: cuda:0
>>>>>>>start training : short_term_forecast_m4_Hourly_none_TimeMixer_m4_sl96_pl96_dm32_nh8_el4_dl1_df32_fc3_ebtimeF_dtTrue_Exp_0>>>>>>>>>>>>>>>>>>>>>>>>>>
Traceback (most recent call last):
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/run.py", line 159, in <module>
    exp.train(setting)
    ~~~~~~~~~^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 56, in train
    train_data, train_loader = self._get_data(flag='train')
                               ~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/exp/exp_short_term_forecasting.py", line 38, in _get_data
    data_set, data_loader = data_provider(self.args, flag)
                            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_factory.py", line 77, in data_provider
    data_set = Data(
        root_path=args.root_path,
    ...<7 lines>...
        seasonal_patterns=args.seasonal_patterns
    )
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 318, in __init__
    self.__read_data__()
    ~~~~~~~~~~~~~~~~~~^^
  File "/home/hdd249/TS_LLM/src/method/imputation/TimeMixer/data_provider/data_loader.py", line 326, in __read_data__
    training_values = np.array(
        [v[~np.isnan(v)] for v in
         dataset.values[dataset.groups == self.seasonal_patterns]])  # split different frequencies
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (414,) + inhomogeneous part.
